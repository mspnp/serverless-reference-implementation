{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
    "parameters": {
        "appName": {
            "type": "string",
            "maxLength": 6,
            "metadata": {
                "description": "The name for the function app. It must only contain characters and numbers, and be 6 chars long max."
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_ZRS",
                "Standard_GRS",
                "Standard_RAGRS"
            ]
        },
        "slotName": {
            "type": "string",
            "defaultValue": "staging",
            "allowedValues": [
                "staging"
            ]
        },
        "appInsightsLocation": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
              "description": "Location to deploy Application Insights"
            }
        },
        "cosmosDatabaseName": {
            "type": "string",
            "metadata": {
              "description": "Cosmos DB database name"
            }
        },
        "cosmosDatabaseCollection": {
            "type": "string",
            "metadata": {
              "description": "Cosmos DB collection name"
            }
        }
    },
	"variables": {
        "droneStatusStorageAccountName": "[toLower(concat(parameters('appName'),'ds',uniqueString(resourceGroup().id)))]",
        "droneTelemetryStorageAccountName": "[toLower(concat(parameters('appName'),'dt', uniqueString(resourceGroup().id)))]",
        "droneTelemetryDeadLetterStorageQueueAccountName": "[toLower(concat(parameters('appName'),'dtq',uniqueString(resourceGroup().id)))]",
        "hostingPlanName": "[parameters('appName')]",
        "droneStatusFunctionAppName": "[concat(parameters('appName'),uniqueString(resourceGroup().id),'-dronestatus')]",
        "droneTelemetryFunctionAppName": "[concat(parameters('appName'),uniqueString(resourceGroup().id),'-dronetelemetry')]",
        "droneStatusStorageAccountId": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('droneStatusStorageAccountName'))]",
        "droneTelemetryStorageAccountId": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('droneTelemetryStorageAccountName'))]",
        "droneTelemetryDeadLetterStorageQueueAccountId": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('droneTelemetryDeadLetterStorageQueueAccountName'))]",
        "droneStatusAppInsightsName": "[concat(parameters('appName'), uniqueString(resourceGroup().id),'-ds-ai')]",
        "droneTelemetryAppInsightsName": "[concat(parameters('appName'), uniqueString(resourceGroup().id),'-dt-ai')]",
        "cosmosDatabaseAccount": "[toLower(concat(parameters('appName'), uniqueString(resourceGroup().id)))]",
        "eventHubNameSpaceName": "[concat(parameters('appName'),uniqueString(resourceGroup().id),'-ns')]",
        "eventHubName": "[concat(parameters('appName'),'-eh')]",
        "eventHubId": "[concat('Microsoft.EventHub/namespaces/', variables('eventHubNamespaceName'), '/EventHubs/',variables('eventHubName'))]",
        "eventHubConsumerGroup": "dronetelemetry",
        "sendEventSourceKeyName": "send",
        "listenEventSourceKeyName": "listen",
        "eventSourceKeyName": "allinone"
	},
    "resources": [
    {
        "name": "[variables('droneStatusStorageAccountName')]",
        "type": "Microsoft.Storage/storageAccounts",
        "location": "[resourceGroup().location]",
        "apiVersion": "2017-10-01",
        "sku": {
            "name": "[parameters('storageAccountType')]"
        },
        "dependsOn": [],
        "tags": {
            "displayName": "Drone Status Function App "
        },
        "kind": "Storage",
        "properties": {
            "supportsHttpsTrafficOnly": true,
            "encryption": {
                "services": {
                    "blob": {
                        "enabled": true
                    },
                    "file": {
                        "enabled": true
                    }
                },
                "keySource": "Microsoft.Storage"
            }
        }
    },
    {
        "name": "[variables('droneTelemetryStorageAccountName')]",
        "type": "Microsoft.Storage/storageAccounts",
        "location": "[resourceGroup().location]",
        "apiVersion": "2017-10-01",
        "sku": {
            "name": "[parameters('storageAccountType')]"
        },
        "dependsOn": [],
        "tags": {
            "displayName": "Drone Telemetry Function App Storage"
        },
        "kind": "Storage",
        "properties": {
            "supportsHttpsTrafficOnly": true,
            "encryption": {
                "services": {
                    "blob": {
                        "enabled": true
                    },
                    "file": {
                        "enabled": true
                    }
                },
                "keySource": "Microsoft.Storage"
            }
        }
    },
    {
        "name": "[variables('droneTelemetryDeadLetterStorageQueueAccountName')]",
        "type": "Microsoft.Storage/storageAccounts",
        "location": "[resourceGroup().location]",
        "apiVersion": "2017-10-01",
        "sku": {
            "name": "[parameters('storageAccountType')]"
        },
        "dependsOn": [],
        "tags": {
            "displayName": "Drone Telemetry Function App Storage"
        },
        "kind": "Storage",
        "properties": {
            "supportsHttpsTrafficOnly": true,
            "encryption": {
                "services": {
                    "blob": {
                        "enabled": true
                    },
                    "queue": {
                        "enabled": true
                    }
                },
                "keySource": "Microsoft.Storage"
            }
        }
    },
    {
        "type": "microsoft.insights/components",
        "kind": "other",
        "name": "[variables('droneStatusAppInsightsName')]",
        "apiVersion": "2014-04-01",
        "location": "[parameters('appInsightsLocation')]",
        "tags": {},
        "scale": null,
        "properties": {
            "ApplicationId": "[variables('droneStatusFunctionAppName')]"
        },
        "dependsOn": []
    },
    {
        "type": "microsoft.insights/components",
        "kind": "other",
        "name": "[variables('droneTelemetryAppInsightsName')]",
        "apiVersion": "2014-04-01",
        "location": "[parameters('appInsightsLocation')]",
        "tags": {},
        "scale": null,
        "properties": {
            "ApplicationId": "[variables('droneTelemetryFunctionAppName')]"
        },
        "dependsOn": []
    },
    {
        "type": "Microsoft.Web/serverfarms",
        "apiVersion": "2015-04-01",
        "name": "[variables('hostingPlanName')]",
        "location": "[resourceGroup().location]",
        "properties": {
            "name": "[variables('hostingPlanName')]",
            "computeMode": "Dynamic",
            "sku": "Dynamic"
        }
    },
    {
        "name": "[variables('cosmosDatabaseAccount')]",
        "type": "Microsoft.DocumentDB/databaseAccounts",
        "apiVersion": "2015-04-08",
        "location": "[resourceGroup().location]",
        "tags": {
            "displayName": "cosmosDB"
        },
        "kind": "GlobalDocumentDB",
        "properties": {
            "databaseAccountOfferType": "Standard"
        }
    },
    {
        "apiVersion": "2015-08-01",
        "type": "Microsoft.Web/sites",
        "name": "[variables('droneStatusFunctionAppName')]",
        "location": "[resourceGroup().location]",
        "tags": {
            "displayName": "Drone Status Function App"
        },
        "kind": "functionapp",
        "dependsOn": [
            "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('droneStatusStorageAccountName'))]",
            "[concat('Microsoft.DocumentDb/databaseAccounts/', variables('cosmosDatabaseAccount'))]",
            "[resourceId('microsoft.insights/components', variables('droneStatusAppInsightsName'))]"
        ],
        "properties": {
            "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
            "siteConfig": {
                "appSettings": [
                    {
                        "name": "AzureWebJobsStorage",
                        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('droneStatusStorageAccountName'), ';AccountKey=', listKeys(variables('droneStatusStorageAccountId'),'2015-05-01-preview').key1, ';EndpointSuffix=',environment().suffixes.storage)]"
                    },
                    {
                        "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('droneStatusStorageAccountName'), ';AccountKey=', listKeys(variables('droneStatusStorageAccountId'),'2015-05-01-preview').key1, ';EndpointSuffix=',environment().suffixes.storage)]"
                    },
                    {
                        "name": "WEBSITE_CONTENTSHARE",
                        "value": "[toLower(variables('droneStatusFunctionAppName'))]"
                    },
                    {
                        "name": "FUNCTIONS_EXTENSION_VERSION",
                        "value": "~2"
                    },
                    {
                        "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                        "value": "[reference(concat('microsoft.insights/components/', variables('droneStatusAppInsightsName'))).InstrumentationKey]"
                    },
                    {
                        "name": "COSMOSDB_CONNECTION_STRING",
                        "value": "[concat('AccountEndpoint=',reference(concat('Microsoft.DocumentDb/databaseAccounts/',variables('cosmosDatabaseAccount'))).documentEndpoint,';AccountKey=',listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('cosmosDatabaseAccount')), '2015-04-08').primaryMasterKey,';')]"
                    },
                    {
                        "name": "CosmosDBEndpoint",
                        "value": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/',variables('cosmosDatabaseAccount'))).documentEndpoint]"
                    },
                    {
                        "name": "CosmosDBKey",
                        "value": "[listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('cosmosDatabaseAccount')), '2015-04-08').primaryMasterKey]"
                    },
                    {
                        "name": "COSMOSDB_DATABASE_NAME",
                        "value": "[parameters('cosmosDatabaseName')]"
                    },
                    {
                        "name": "COSMOSDB_DATABASE_COL",
                        "value": "[parameters('cosmosDatabaseCollection')]"
                    }
                ]
            }
        }
    },
    {
        "type": "Microsoft.Web/sites/slots",
        "kind": "functionapp",
        "name": "[concat(variables('droneStatusFunctionAppName'), '/', parameters('slotName'))]",
        "apiVersion": "2016-08-01",
        "location": "[resourceGroup().location]",
        "scale": null,
        "properties": {
            "enabled": true,
            "reserved": false,
            "clientAffinityEnabled": true,
            "clientCertEnabled": false,
            "hostNamesDisabled": false,
            "dailyMemoryTimeQuota": 0,
            "cloningInfo": null
        },
        "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('droneStatusFunctionAppName'))]",
            "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
        ]
    },
    {
      "apiVersion": "2017-04-01",
      "name": "[variables('eventHubNamespaceName')]",
      "type": "Microsoft.EventHub/Namespaces",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "isAutoInflateEnabled": "true",
        "maximumThroughputUnits": "20"
      },
      "resources": [
        {
          "apiVersion": "2017-04-01",
          "name": "[variables('eventHubName')]",
          "type": "EventHubs",
          "dependsOn": [
            "[concat('Microsoft.EventHub/namespaces/', variables('eventHubNamespaceName'))]"
          ],
          "properties": {
            "messageRetentionInDays": "1",
            "partitionCount": "4"
          },
          "resources": [
            {
              "type": "AuthorizationRules",
              "name": "[variables('eventSourceKeyName')]",
              "apiVersion": "2017-04-01",
              "location": "[resourceGroup().location]",
              "dependsOn": [
                "[variables('eventHubName')]"
              ],
              "properties": {
                "rights": [
                  "Listen",
                  "Send",
                  "Manage"
                ]
              }
            },
            {
              "type": "AuthorizationRules",
              "name": "[variables('sendEventSourceKeyName')]",
              "apiVersion": "2017-04-01",
              "location": "[resourceGroup().location]",
              "dependsOn": [
                "[variables('eventHubName')]"
              ],
              "properties": {
                "rights": [
                  "Send"
                ]
              }
            },
            {
              "type": "AuthorizationRules",
              "name": "[variables('listenEventSourceKeyName')]",
              "apiVersion": "2017-04-01",
              "location": "[resourceGroup().location]",
              "dependsOn": [
                "[variables('eventHubName')]"
              ],
              "properties": {
                "rights": [
                  "Listen"
                ]
              }
            },
            {
              "type": "ConsumerGroups",
              "apiVersion": "2017-04-01",
              "name": "[variables('eventHubConsumerGroup')]",
              "dependsOn": [
                "[variables('eventHubName')]"
              ]
            }
          ]
        }
      ]
    },
    {
        "apiVersion": "2015-08-01",
        "type": "Microsoft.Web/sites",
        "name": "[variables('droneTelemetryFunctionAppName')]",
        "location": "[resourceGroup().location]",
        "tags": {
            "displayName": "Drone Telemetry Function App"
        },
        "kind": "functionapp",
        "dependsOn": [
            "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('droneTelemetryStorageAccountName'))]",
            "[concat('Microsoft.DocumentDb/databaseAccounts/', variables('cosmosDatabaseAccount'))]",
            "[resourceId('microsoft.insights/components', variables('droneTelemetryAppInsightsName'))]",
            "[variables('eventHubId')]"
        ],
        "properties": {
            "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
            "siteConfig": {
                "appSettings": [
                    {
                        "name": "AzureWebJobsStorage",
                        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('droneTelemetryStorageAccountName'), ';AccountKey=', listKeys(variables('droneTelemetryStorageAccountId'),'2015-05-01-preview').key1, ';EndpointSuffix=',environment().suffixes.storage)]"
                    },
                    {
                        "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('droneTelemetryStorageAccountName'), ';AccountKey=', listKeys(variables('droneTelemetryStorageAccountId'),'2015-05-01-preview').key1, ';EndpointSuffix=',environment().suffixes.storage)]"
                    },
                    {
                        "name": "WEBSITE_CONTENTSHARE",
                        "value": "[toLower(variables('droneTelemetryFunctionAppName'))]"
                    },
                    {
                        "name": "FUNCTIONS_EXTENSION_VERSION",
                        "value": "~2"
                    },
                    {
                        "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                        "value": "[reference(concat('microsoft.insights/components/', variables('droneTelemetryAppInsightsName'))).InstrumentationKey]"
                    },
                    {
                        "name": "COSMOSDB_CONNECTION_STRING",
                        "value": "[concat('AccountEndpoint=',reference(concat('Microsoft.DocumentDb/databaseAccounts/',variables('cosmosDatabaseAccount'))).documentEndpoint,';AccountKey=',listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('cosmosDatabaseAccount')), '2015-04-08').primaryMasterKey,';')]"
                    },
                    {
                        "name": "CosmosDBEndpoint",
                        "value": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/',variables('cosmosDatabaseAccount'))).documentEndpoint]"
                    },
                    {
                        "name": "CosmosDBKey",
                        "value": "[listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('cosmosDatabaseAccount')), '2015-04-08').primaryMasterKey]"
                    },
                    {
                        "name": "COSMOSDB_DATABASE_NAME",
                        "value": "[parameters('cosmosDatabaseName')]"
                    },
                    {
                        "name": "COSMOSDB_DATABASE_COL",
                        "value": "[parameters('cosmosDatabaseCollection')]"
                    },
                    {
                        "name": "EventHubConnection",
                        "value": "[listKeys(concat(variables('eventHubId'),'/authorizationRules/listen/'), '2017-04-01').primaryConnectionString]"
                    },
                    {
                        "name": "EventHubConsumerGroup",
                        "value": "[variables('eventHubConsumerGroup')]"
                    },
                    {
                        "name": "EventHubName",
                        "value": "[variables('eventHubName')]"
                    },
                    {
                        "name": "DeadLetterStorage",
                        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('droneTelemetryDeadLetterStorageQueueAccountName'), ';AccountKey=', listKeys(variables('droneTelemetryDeadLetterStorageQueueAccountId'),'2015-05-01-preview').key1, ';EndpointSuffix=',environment().suffixes.storage)]"
                    }
                ]
            }
        }
    }
    ],
    "outputs": {
        "cosmosDatabaseAccount": {
            "type": "string",
            "value": "[variables('cosmosDatabaseAccount')]"
        },
        "droneStatusFunctionAppName": {
            "type": "string",
            "value": "[variables('droneStatusFunctionAppName')]"
        },
        "droneTelemetryFunctionAppName": {
            "type": "string",
            "value": "[variables('droneTelemetryFunctionAppName')]"
        }
    }
}
