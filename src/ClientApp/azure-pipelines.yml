trigger:
  batch: true
  branches:
    include:
    - master
  paths:
    include: 
    - src/ClientApp

stages:
- stage: Build
  jobs:
  - job: WebsiteBuild
    displayName: Build Fabrikam Drone Status app using Gatbsyjs
    pool:
      vmImage: 'Ubuntu-16.04'
    continueOnError: false
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'install node.js'

    - script: |
        cd src/ClientApp
        cat > .env.production <<EOF
        AZURE_TENANT_ID=$(azureTenantId)
        AZURE_CLIENT_ID=$(azureClientId)
        AZURE_API_CLIENT_ID=$(azureApiClientId)
        AZURE_API_URL=$(azureApiUrl)
        EOF
      displayName: 'configure azure tenant, client and api details'

    - script: |
        cd src/ClientApp
        npm install
        npx gatsby build
      displayName: 'gatsby build'

    - script: |
        cd $(Build.SourcesDirectory)
        echo $(docker run --rm -v "$(pwd):/repo" gittools/gitversion:5.0.1-linux-netcoreapp2.1 /repo | grep -oP '(?<="MajorMinorPatch":")[^"]*') > src/ClientApp/public/version.txt
      displayName: 'bump version'

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: 'src/ClientApp/public'
        artifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  jobs:
  - deployment: WebsiteDeploy
    displayName: Deploy Fabrikam Drone Status app
    pool:
      vmImage: 'Ubuntu-16.04'
    environment: 'fabrikamdronestatus-prod'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: |
              echo '##vso[task.setvariable variable=nextVersion]'$(cat "$(Pipeline.Workspace)/drop/version.txt")
            displayName: 'set nextVersion variable'
            name: setVarNextVersion

          - script: |
              az login --service-principal -u $(azureArmClientId) -p $(azureArmClientSecret) --tenant $(azureArmTenantId)
              az storage blob upload-batch -s "$(Pipeline.Workspace)/drop" --destination \$web --account-name $(azureStorageAccountName)
              echo "content uploaded at https://$(azureStorageAccountName).azureedge.net/index.html"
            displayName: 'upload to Azure Storage static website hosting'
                    
          - task: GithubRelease@0 
            displayName: 'Create GitHub Release'      
            inputs:
              gitHubConnection: $(gitHubServiceConnectionName)
              tagSource: manual
              tag: $(nextVersion)
              assets: $(Pipeline.Workspace)/drop
              title: 'Fabrikam Drone Status App $(nextVersion)'